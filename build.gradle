apply plugin: 'java'
apply plugin: 'com.google.protobuf'
buildscript {
    repositories {
        maven{
            mavenCentral()
            url "https://maven-central.storage-download.googleapis.com/repos/central/data/"}

    }
    dependencies{
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
    }
}



repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
    mavenLocal()
}


sourceCompatibility = 1.8
targetCompatibility = 1.8


def grpcVersion ='1.16.1'
def nettyTcNativeVersion = '2.0.7.Final'
def protobufVersion = '3.6.1'
def protocVersion = '3.6.1'


dependencies {
    compile "com.google.api.grpc:proto-google-common-protos:1.0.0"
    compile "io.grpc:grpc-alts:${grpcVersion}"
    compile "io.grpc:grpc-netty-shaded:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'com.google.protobuf:protobuf-java:3.6.1'
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.netty:netty-tcnative-boringssl-static:${nettyTcNativeVersion}"
    compile "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    testCompile "io.grpc:grpc-testing:${grpcVersion}"
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:1.9.5"
}
protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}"}
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"}
    }
    generateProtoTasks{
        all()*.plugins{ grpc {}}
    }
}
sourceSets {
    main {
        java {
            srcDirs('build/generated/source/proto/main/grpc')
            srcDirs('build/generated/source/proto/main/java')
            srcDirs('src/main/java')
        }
    }
}
apply plugin: 'idea'
apply plugin: 'application'
startScripts.enabled = false


task client(type: CreateStartScripts){
    mainClassName = 'com.project.bonaventurajason.client.ClientMain'
    applicationName = 'client'
    outputDir = new File (project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

task server(type: CreateStartScripts){
    mainClassName = 'com.project.bonaventurajason.server.ServerMain'
    applicationName = 'server'
    outputDir = new File (project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}
applicationDistribution.into('bin'){
    from(client)
    from(server)
}